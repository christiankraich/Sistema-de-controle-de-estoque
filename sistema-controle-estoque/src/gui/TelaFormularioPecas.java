package gui;

import dao.FornecedoresDAO;
import dao.PecasDAO;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Fornecedores;
import model.Pecas;
import utilidades.LimpaComponente;

public class TelaFormularioPecas extends javax.swing.JFrame {

    private final LimpaComponente limpar = new LimpaComponente();
    private boolean fornecedoresCarregados = false;
    
    // carrega e exibe as peças na tabela
    public void listar() {
        PecasDAO pecasDao = new PecasDAO();
        List<Pecas> lista = pecasDao.listar();
        DefaultTableModel dados = (DefaultTableModel) tabela.getModel();
        dados.setNumRows(0);
        for (Pecas p : lista) {
            dados.addRow(new Object[]{
                p.getId(),
                p.getFornecedores(),
                p.getNome(),
                p.getDescricao(),
                p.getQuantidade(),
                p.getValorUnidadeFornecedor(),
                p.getValorUnidadeCliente()

            });
        }
    }

    public TelaFormularioPecas() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        painelGuias = new javax.swing.JTabbedPane();
        pnlDadosPecas = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnPesquisarNome = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtQuantidade = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtPrecoFornecedor = new javax.swing.JTextField();
        txtPrecoCliente = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cbFornecedor = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDescricao = new javax.swing.JTextArea();
        pnlConsulta = new javax.swing.JPanel();
        txtPesquisaNome = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnPesquisaNomeTabela = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        btnAdicionar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Formulário de Peças");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 51, 51));
        jPanel1.setPreferredSize(new java.awt.Dimension(854, 75));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Formulário de Peças");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
        );

        pnlDadosPecas.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel2.setText("Id:");

        txtId.setEditable(false);
        txtId.setEnabled(false);

        jLabel3.setText("Nome:");

        jLabel6.setText("Descrição:");

        btnPesquisarNome.setText("Pesquisar");
        btnPesquisarNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarNomeActionPerformed(evt);
            }
        });

        jLabel11.setText("Quantidade:");

        txtQuantidade.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyTyped(java.awt.event.KeyEvent e) {
                char c = e.getKeyChar();
                if (!Character.isDigit(c)) {
                    e.consume();
                }
                if (txtQuantidade.getText().length() >= 5) {
                    e.consume();
                }
            }
        });
        txtQuantidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        jLabel5.setText("Preço Cliente:");

        jLabel7.setText("Preço Fornecedor:");

        txtPrecoFornecedor.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyTyped(java.awt.event.KeyEvent e) {
                char c = e.getKeyChar();

                // Permite apenas números e o ponto
                if (!(Character.isDigit(c) || c == '.')) {
                    e.consume();
                }

                // Impede que o número ultrapasse 10 caracteres no total
                if (txtPrecoFornecedor.getText().length() >= 10) {
                    e.consume();
                }

                // Impede mais de um ponto decimal
                if (c == '.' && txtPrecoFornecedor.getText().contains(".")) {
                    e.consume();
                }

                // Impede mais de 2 casas decimais após o ponto
                if (txtPrecoFornecedor.getText().contains(".")) {
                    // Se já houver ponto, verifica as casas decimais
                    int decimalIndex = txtPrecoFornecedor.getText().indexOf('.');
                    if (txtPrecoFornecedor.getText().substring(decimalIndex + 1).length() >= 2) {
                        e.consume();  // Bloqueia o evento se já houver 2 casas decimais
                    }
                }

                // Impede que o ponto seja o primeiro caractere
                if (c == '.' && txtPrecoFornecedor.getText().isEmpty()) {
                    e.consume(); // Bloqueia o ponto se o campo estiver vazio
                }
            }
        });

        txtPrecoCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyTyped(java.awt.event.KeyEvent e) {
                char c = e.getKeyChar();

                // Permite apenas números e o ponto
                if (!(Character.isDigit(c) || c == '.')) {
                    e.consume();
                }

                // Impede que o número ultrapasse 10 caracteres no total
                if (txtPrecoCliente.getText().length() >= 10) {
                    e.consume();
                }

                // Impede mais de um ponto decimal
                if (c == '.' && txtPrecoCliente.getText().contains(".")) {
                    e.consume();
                }

                // Impede mais de 2 casas decimais após o ponto
                if (txtPrecoCliente.getText().contains(".")) {
                    // Se já houver ponto, verifica as casas decimais
                    int decimalIndex = txtPrecoCliente.getText().indexOf('.');
                    if (txtPrecoCliente.getText().substring(decimalIndex + 1).length() >= 2) {
                        e.consume();  // Bloqueia o evento se já houver 2 casas decimais
                    }
                }

                // Impede que o ponto seja o primeiro caractere
                if (c == '.' && txtPrecoCliente.getText().isEmpty()) {
                    e.consume(); // Bloqueia o ponto se o campo estiver vazio
                }
            }
        });

        jLabel8.setText("Fornecedor:");

        cbFornecedor.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                cbFornecedorAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        txtDescricao.setColumns(20);
        txtDescricao.setRows(5);
        jScrollPane2.setViewportView(txtDescricao);

        javax.swing.GroupLayout pnlDadosPecasLayout = new javax.swing.GroupLayout(pnlDadosPecas);
        pnlDadosPecas.setLayout(pnlDadosPecasLayout);
        pnlDadosPecasLayout.setHorizontalGroup(
            pnlDadosPecasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosPecasLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnlDadosPecasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDadosPecasLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addGroup(pnlDadosPecasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlDadosPecasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtQuantidade, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                            .addComponent(txtPrecoFornecedor, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                            .addComponent(txtPrecoCliente))
                        .addGap(160, 160, 160))
                    .addGroup(pnlDadosPecasLayout.createSequentialGroup()
                        .addGroup(pnlDadosPecasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlDadosPecasLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(cbFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlDadosPecasLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnPesquisarNome)))
                        .addContainerGap(201, Short.MAX_VALUE))))
        );
        pnlDadosPecasLayout.setVerticalGroup(
            pnlDadosPecasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosPecasLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(pnlDadosPecasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisarNome))
                .addGap(27, 27, 27)
                .addGroup(pnlDadosPecasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cbFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(pnlDadosPecasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlDadosPecasLayout.createSequentialGroup()
                        .addGroup(pnlDadosPecasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtPrecoFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(pnlDadosPecasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(pnlDadosPecasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtPrecoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(132, 132, 132))
        );

        painelGuias.addTab("Dados da Peça", pnlDadosPecas);

        txtPesquisaNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisaNomeKeyReleased(evt);
            }
        });

        jLabel4.setText("Nome:");

        btnPesquisaNomeTabela.setText("Pesquisar");
        btnPesquisaNomeTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaNomeTabelaActionPerformed(evt);
            }
        });

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "FORNECEDOR", "NOME", "DESCRIÇÃO", "QUANTIDADE", "VALOR FORNECEDOR", "VALOR CLIENTE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabela);

        javax.swing.GroupLayout pnlConsultaLayout = new javax.swing.GroupLayout(pnlConsulta);
        pnlConsulta.setLayout(pnlConsultaLayout);
        pnlConsultaLayout.setHorizontalGroup(
            pnlConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(pnlConsultaLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPesquisaNome, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnPesquisaNomeTabela)
                        .addGap(0, 314, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlConsultaLayout.setVerticalGroup(
            pnlConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConsultaLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(pnlConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPesquisaNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisaNomeTabela))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        painelGuias.addTab("Consulta de Peças", pnlConsulta);

        btnAdicionar.setText("Cadastrar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        btnVoltar.setText("Voltar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 809, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelGuias)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(btnAdicionar)
                .addGap(85, 85, 85)
                .addComponent(btnEditar)
                .addGap(85, 85, 85)
                .addComponent(btnExcluir)
                .addGap(85, 85, 85)
                .addComponent(btnLimpar)
                .addGap(85, 85, 85)
                .addComponent(btnVoltar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelGuias, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdicionar)
                    .addComponent(btnEditar)
                    .addComponent(btnExcluir)
                    .addComponent(btnLimpar)
                    .addComponent(btnVoltar))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        // cadastra a peça no banco de dados e limpa os campos de texto
        Pecas peca = new Pecas();

        Fornecedores fornecedor = (Fornecedores) cbFornecedor.getSelectedItem();
        peca.setFornecedores(fornecedor);

        peca.setNome(txtNome.getText());
        peca.setDescricao(txtDescricao.getText());
        peca.setQuantidade(Short.parseShort(txtQuantidade.getText()));
        peca.setValorUnidadeFornecedor(Double.parseDouble(txtPrecoFornecedor.getText()));
        peca.setValorUnidadeCliente(Double.parseDouble(txtPrecoCliente.getText()));

        PecasDAO pecasDao = new PecasDAO();
        pecasDao.salvar(peca);
        limpar.limparCampos(pnlDadosPecas);
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnPesquisarNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarNomeActionPerformed
        // pesquisa a peça no banco de dados com base no nome
        String nome = txtNome.getText();
        PecasDAO pecasDao = new PecasDAO();
        Pecas peca = pecasDao.buscarPeca(nome);
        // verifica se a peça está cadastrada no banco de dados e preenche os campos com as informações
        if (peca.getNome() != null) {
            txtId.setText(String.valueOf(peca.getId()));
            // percorre os itens do comboBox para selecionar o fornecedor com id correspondente ao da peça
            Fornecedores fornecedorSelecionado = peca.getFornecedores();
            for (int i = 0; i < cbFornecedor.getItemCount(); i++) {
                Fornecedores fornecedor = (Fornecedores) cbFornecedor.getItemAt(i);
                if (fornecedor.getId() == fornecedorSelecionado.getId()) {
                    cbFornecedor.setSelectedItem(fornecedor);
                    break;
                }
            }

            txtNome.setText(peca.getNome());
            txtDescricao.setText(peca.getDescricao());
            txtQuantidade.setText(String.valueOf(peca.getQuantidade()));
            txtPrecoFornecedor.setText(String.valueOf(peca.getValorUnidadeFornecedor()));
            txtPrecoCliente.setText(String.valueOf(peca.getValorUnidadeCliente()));

        } else {
            JOptionPane.showMessageDialog(null, "Peça não encontrada.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnPesquisarNomeActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        // limpa os campos do painel
        limpar.limparCampos(pnlDadosPecas);
    }//GEN-LAST:event_btnLimparActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // atualiza com os dados ao abrir a janela
        listar();
    }//GEN-LAST:event_formWindowActivated

    private void btnPesquisaNomeTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaNomeTabelaActionPerformed
        // pesquisa e filtra as peças na tabela com base no nome
        String nome = txtPesquisaNome.getText() + "%";
        PecasDAO pecasDao = new PecasDAO();
        List<Pecas> lista = pecasDao.filtrar(nome);
        DefaultTableModel dados = (DefaultTableModel) tabela.getModel();
        dados.setNumRows(0);
        for (Pecas p : lista) {
            dados.addRow(new Object[]{
                p.getId(),
                p.getFornecedores().getNome(),
                p.getNome(),
                p.getDescricao(),
                p.getQuantidade(),
                p.getValorUnidadeFornecedor(),
                p.getValorUnidadeCliente()
            });
        }
    }//GEN-LAST:event_btnPesquisaNomeTabelaActionPerformed

    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked
        // transfere os dados da linha selecionada na tabela para os campos na aba de dados
        painelGuias.setSelectedIndex(0);
        txtId.setText(tabela.getValueAt(tabela.getSelectedRow(), 0).toString());
        // percorre os itens no comboBox para selecionar o fornecedor com nome correspondente ao da tabela
        String nomeFornecedor = tabela.getValueAt(tabela.getSelectedRow(), 1).toString();
        for (int i = 0; i < cbFornecedor.getItemCount(); i++) {
            Fornecedores fornecedor = (Fornecedores) cbFornecedor.getItemAt(i);
            if (fornecedor.getNome().equals(nomeFornecedor)) {
                cbFornecedor.setSelectedItem(fornecedor);
                break;
            }
        }

        txtNome.setText(tabela.getValueAt(tabela.getSelectedRow(), 2).toString());
        txtDescricao.setText(tabela.getValueAt(tabela.getSelectedRow(), 3).toString());
        txtQuantidade.setText(tabela.getValueAt(tabela.getSelectedRow(), 4).toString());
        txtPrecoFornecedor.setText(tabela.getValueAt(tabela.getSelectedRow(), 5).toString());
        txtPrecoCliente.setText(tabela.getValueAt(tabela.getSelectedRow(), 6).toString());

        txtNome.requestFocus();
    }//GEN-LAST:event_tabelaMouseClicked

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // atualiza os dados da peça no banco de dados e limpa os campos
        Pecas peca = new Pecas();
        peca.setFornecedores((Fornecedores) cbFornecedor.getSelectedItem());
        peca.setNome(txtNome.getText());
        peca.setDescricao(txtDescricao.getText());
        peca.setQuantidade(Short.parseShort(txtQuantidade.getText()));
        peca.setValorUnidadeFornecedor(Double.parseDouble(txtPrecoFornecedor.getText()));
        peca.setValorUnidadeCliente(Double.parseDouble(txtPrecoCliente.getText()));

        peca.setId(Integer.parseInt(txtId.getText()));

        PecasDAO dao = new PecasDAO();
        dao.editar(peca);
        limpar.limparCampos(pnlDadosPecas);
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // exclui os dados da peça no banco de dados e limpa os campos
        Pecas peca = new Pecas();
        peca.setId(Integer.parseInt(txtId.getText()));
        PecasDAO dao = new PecasDAO();
        dao.excluir(peca);
        limpar.limparCampos(pnlDadosPecas);
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void cbFornecedorAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_cbFornecedorAncestorAdded
        // verifica se os fornecedores já foram carregados no comboBox,
        // se não estiverem, carrega todos os os fornecedores existentes no banco de dados no comboBox
        if (!fornecedoresCarregados) {
            FornecedoresDAO fornecedoresDao = new FornecedoresDAO();
            List<Fornecedores> lista = fornecedoresDao.listar();
            cbFornecedor.removeAllItems();
            for (Fornecedores f : lista) {
                cbFornecedor.addItem(f);
            }
            fornecedoresCarregados = true;
        }
    }//GEN-LAST:event_cbFornecedorAncestorAdded

    private void txtPesquisaNomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisaNomeKeyReleased
        // ao pressionar ENTER ou BACK SPACE no campo de texto, pesquisa e filtra as peças na tabela
        if (evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            String nome = txtPesquisaNome.getText() + "%";
            PecasDAO pecasDao = new PecasDAO();
            List<Pecas> lista = pecasDao.filtrar(nome);
            DefaultTableModel dados = (DefaultTableModel) tabela.getModel();
            dados.setNumRows(0);
            for (Pecas p : lista) {
                dados.addRow(new Object[]{
                    p.getId(),
                    p.getFornecedores().getNome(),
                    p.getNome(),
                    p.getDescricao(),
                    p.getQuantidade(),
                    p.getValorUnidadeFornecedor(),
                    p.getValorUnidadeCliente()
                });
            }
        }
    }//GEN-LAST:event_txtPesquisaNomeKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaFormularioPecas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaFormularioPecas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaFormularioPecas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaFormularioPecas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaFormularioPecas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnPesquisaNomeTabela;
    private javax.swing.JButton btnPesquisarNome;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JComboBox cbFornecedor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JTabbedPane painelGuias;
    private javax.swing.JPanel pnlConsulta;
    private javax.swing.JPanel pnlDadosPecas;
    private javax.swing.JTable tabela;
    private javax.swing.JTextArea txtDescricao;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtPesquisaNome;
    private javax.swing.JTextField txtPrecoCliente;
    private javax.swing.JTextField txtPrecoFornecedor;
    private javax.swing.JFormattedTextField txtQuantidade;
    // End of variables declaration//GEN-END:variables
}
